name: User Service CI Pipeline

on:
  push:
    branches: [ main, ci-pipeline ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      build-status: ${{ steps.build.outcome }}

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 
      
    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Building project
      id: build
      run: mvn compile -q -DskipTests
      working-directory: ./impl

    - name: Upload compiled classes
      uses: actions/upload-artifact@v4
      with:
        name: compiled-classes
        path: ./impl/target/classes
        
  tests:
    name: Testing
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.build-status == 'success'
    
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
         
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 
  
    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Downloading compiled classes
      uses: actions/download-artifact@v4
      with:
        name: compiled-classes
        path: ./impl/target/classes

    - name: Wait for databases
      run: sleep 10

    - name: Tests with JaCoCo coverage
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${{ secrets.DB_NAME }}
        SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SPRING_REDIS_HOST: redis 
        SPRING_REDIS_PORT: 6379
      run: mvn verify -q
      working-directory: ./impl

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tests-results
        path: ./impl/target/surefire-reports/