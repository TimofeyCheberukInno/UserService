name: User Service CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  build-and-analyze:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Run full Maven lifecycle with JaCoCo and SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn clean install \
          org.jacoco:jacoco-maven-plugin:prepare-agent \
          surefire:test \
          failsafe:integration-test \
          org.jacoco:jacoco-maven-plugin:report \
          sonar:sonar \
          -Dsonar.projectKey=TimofeyCheberukInno_UserService \
          -Dsonar.organization=timofeycheberukinno \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
      working-directory:./impl
      
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-analyze
    if: needs.build-and-analyze.result == 'success'

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t user-service:latest -f./impl/Dockerfile./impl

    - name: Save Docker image to tar
      run: docker save user-service:latest | gzip > user-service.tar.gz

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: user-service-docker-image
        path: user-service.tar.gz