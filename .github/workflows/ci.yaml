name: User Service CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build with JaCoCo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 
      
    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Build project with JaCoCo agent
      id: build
      run: mvn compile org.jacoco:jacoco-maven-plugin:prepare-agent -q -DskipTests
      working-directory: ./impl

    - name: Upload compiled classes with JaCoCo
      uses: actions/upload-artifact@v4
      with:
        name: compiled-classes-with-jacoco
        path: ./impl/target/classes
        
  tests:
    name: Testing
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'
    
    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 
  
    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Download JaCoCo instrumented classes
      uses: actions/download-artifact@v4
      with:
        name: compiled-classes-with-jacoco
        path: ./impl/target/classes
        
    - name: Checking Docker state
      run: docker info
        
    - name: Run tests with coverage
      run: mvn surefire:test failsafe:integration-test -q
      working-directory: ./impl

    - name: Generate JaCoCo report
      run: mvn org.jacoco:jacoco-maven-plugin:report -q
      working-directory: ./impl

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tests-results
        path: ./impl/target/surefire-reports/

    - name: Upload JaCoCo report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: ./impl/target/site/jacoco/jacoco.xml
        
  sonar:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: tests
    if: needs.tests.result == 'success'
    
    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: JDK setup
      uses: actions/setup-java@v4
      with:
        java-version: '24'
        distribution: 'temurin'
        cache: maven
        cache-dependency-path: ./impl/pom.xml

    - name: Download JaCoCo report
      uses: actions/download-artifact@v4
      with:
        name: jacoco-report
        path: ./impl/target/site/jacoco/jacoco.xml

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud analysis 
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      run: |
        mvn sonar:sonar \
        -Dsonar.projectKey=TimofeyCheberukInno_UserService \
        -Dsonar.organization=timofeycheberukinno \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
      working-directory: ./impl
      
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t user-service:latest -f ./impl/Dockerfile ./impl

    - name: Save Docker image to tar
      run: docker save user-service:latest | gzip > user-service.tar.gz

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v4
      with:
        name: user-service-docker-image
        path: user-service.tar.gz